{
    // --- Optional Copilot Chat toggles (safe to leave commented out) ---
    "chat.provider": "github.copilot-chat",
    "github.copilot.chat.edits.enabled": true,
    "chat.agent.enabled": true,
    // --- Copilot & privacy ---
    "github.copilot.chat.enable": true,
    "github.copilot.editor.enableAutoCompletions": true,
    // Enable Copilot everywhere except Markdown and plaintext
    "github.copilot.enable": {
        "*": true,
        "markdown": false,
        "plaintext": false
    },
    // Allow inline suggestions UI (Tab to accept)
    "editor.inlineSuggest.enabled": true,
    // VS Code telemetry preference
    "telemetry.telemetryLevel": "off",
    // --- Editor hygiene for the refactor ---
    "editor.formatOnSave": true,
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    // Ruff (lint/fix) â€” requires the Ruff extension
    "ruff.enable": true,
    "ruff.organizeImports": true,
    // Run common fixers on save in addition to organize imports
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit",
        "source.fixAll": "explicit"
    },
    // Pytest discovery so Test Explorer and Agent can run it
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": [
        "-q",
        "tests"
    ],
    // Type checking signal (mypy still runs via task)
    "python.analysis.typeCheckingMode": "basic",
    // Helpful: auto-imports in suggestions
    "python.analysis.autoImportCompletions": true,
    "python.defaultInterpreterPath": ".venv/bin/python",
    "python.testing.pytestEnvVars": {
        "ALLOW_SMOKE_TESTS": "0"
    },
    "files.exclude": {
        "**/__pycache__": true,
        ".pytest_cache": true,
        "htmlcov": true,
        ".coverage*": true
    },
    "search.exclude": {
        "**/__pycache__": true,
        ".pytest_cache": true,
        "htmlcov": true
    },
    "editor.formatOnSaveMode": "file",
    "editor.rulers": [
        88
    ],
    "python.testing.cwd": "${workspaceFolder}",
    "python.terminal.activateEnvironment": true,
    "terminal.integrated.profiles.osx": {
        "venv": {
            "path": "zsh",
            "args": [
                "-l",
                "-c",
                "source ${workspaceFolder}/.venv/bin/activate; exec zsh -l"
            ]
        }
    },
    "terminal.integrated.defaultProfile.osx": "venv"
}